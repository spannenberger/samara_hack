import telegram
from telegram.ext import CommandHandler
from telegram.ext import MessageHandler, Filters
from telegram import InputMediaPhoto
from telegram.ext import Updater
from credentials import bot_token
import cv2
import requests
import os 
import glob

from bot_commands import start, cut_video
from utils import process_image, transform_pil_image_to_bytes, get_video, get_image_bytes, draw_contours


TOKEN = bot_token
URL = 'http://10.10.67.145:5010/api/test'

content_type = 'image/jpeg'
headers = {'content-type': content_type}

updater = Updater(token=TOKEN)
dispatcher = updater.dispatcher

print('initializing completed')


def bot_video_preprocessing(bot, update):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∂–∏–≤–æ—Ç–Ω—ã—Ö –Ω–∞ –≤–∏–¥–µ–æ—Ñ—Ä–∞–≥–º–µ–Ω—Ç–µ
    
    –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –≤–∏–¥–µ–æ—Ñ—Ä–∞–≥–º–µ–Ω—Ç –¥–ª—è –ø–æ–∫–∞–¥—Ä–æ–≤–æ–≥–æ –ø—Ä–µ–¥–∏–∫—Ç–∞ –º–æ–¥–µ–ª–∏ 

    Args:
        bot: bot - —Ç–µ–ª–æ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞
        update: command - –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–µ
    """
    text = '–ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∏–¥–µ–æ—Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞\n'
    bot.send_message(chat_id=update.message.chat_id, text=text)

    file_path = get_video(bot, update)

    cap = cv2.VideoCapture(file_path)
    photo_count = 0
    os.makedirs('/workspace/bot/photosfrom_video', exist_ok=True)

    text = '–°—á–∏—Ç–∞–ª –≤–∞—à–µ –≤–∏–¥–µ–æ, –Ω–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫ –ø–æ–ª–µ–∑–Ω—ã—Ö –∫–∞–¥—Ä–æ–≤\n'
    bot.send_message(chat_id=update.message.chat_id, text=text)

    if not cap.isOpened():
        print('Cannot to open video file')

    count = 0
    while cap.isOpened(): # –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –≤–∏–¥–µ–æ—Ñ—Ä–∞–≥–º–µ–Ω—Ç

        _, img_frame = cap.read()
        if img_frame is None:
            break

        photo_count += 1
        image_array = cv2.cvtColor(img_frame, cv2.COLOR_BGR2RGB)

        text = '–û.... –ö–∞–∂–µ—Ç—Å—è, –Ω–∞—à–µ–ª –æ–¥–∏–Ω.... –ï—â–µ —Å–µ–∫—É–Ω–¥–æ—á–∫—É\n'
        bot.send_message(chat_id=update.message.chat_id, text=text)

        _, img_encoded = cv2.imencode('.jpg', image_array)
        data = img_encoded.tostring()

        response = requests.post(URL, data=data, headers=headers) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—ç–∫–µ–Ω–¥ –¥–ª—è –ø—Ä–µ–¥–∏–∫—Ç–∞
        metadata = response.json()['image'] # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ä–∞–±–æ—Ç—ã –º–æ–¥–µ–ª–∏
        
        #@TODO –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è-–æ—Ç—á–µ—Ç–∞ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –¥–µ—Ç–µ–∫—Ü–∏–∏
        leos_count, tigers_count, other_animal_count, is_princess = draw_contours(image_array, metadata).values()
        
        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –≤–∏–¥–µ–æ—Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞
        cv2.imwrite(f'/workspace/bot/photosfrom_video/photo {photo_count}.jpg', cv2.cvtColor(image_array, cv2.COLOR_BGR2RGB))

        count += 120 # 1 —Å–µ–∫—É–Ω–¥–∞ = 30; 2 —Å–µ–∫—É–Ω–¥—ã = 60 –∏ —Ç–¥ - –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
        cap.set(cv2.CAP_PROP_POS_FRAMES, count)

    text = '–û–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–∫–æ–Ω—á–∏–ª, –≤—Å–µ –≤ –Ω–æ—Ä–º–µ! –°–µ–π—á–∞—Å –æ—Ç–ø—Ä–∞–≤–ª—é –∞–ª—å–±–æ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π)\n'
    bot.send_message(chat_id=update.message.chat_id, text=text)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∞–ª—å–±–æ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–æ—Å–ª–µ –¥–µ—Ç–µ–∫—Ü–∏–∏
    media_group = []
    text = 'some caption for album'
    for img in glob.glob("/workspace/bot/photosfrom_video/*.jpg"):
        media_group.append(InputMediaPhoto(open(img, 'rb')))

    bot.send_media_group(chat_id=update.message.chat_id, media = media_group)


def bot_image_processing(bot, update):
    """–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
    
    –ü–æ–ª—É—á–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å —Å –±—ç–∫–∞, —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–æ—Ç–∞

    Args:
        bot: bot - —Ç–µ–ª–æ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞
        update: command - –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–µ
    """

    image_bytes, _ = get_image_bytes(bot, update)

    image_array = process_image(image_bytes)
    _, img_encoded = cv2.imencode('.jpg', image_array)

    data = img_encoded.tostring()

    response = requests.post(URL, data=data, headers=headers) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—ç–∫
    metadata = response.json()['image'] # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ä–∞–±–æ—Ç—ã –º–æ–¥–µ–ª–∏

    leos_count, tigers_count, other_animal_count, is_princess = draw_contours(image_array, metadata).values()
    image = transform_pil_image_to_bytes(image_array)

    print('vse ok')
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—à–ª–∏ –ª–∏ –º—ã –ø—Ä–∏–Ω—Ü–µ—Å—Å—É
    if is_princess:
        text = f"–ù–∞ —Ñ–æ—Ç–æ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ \n–õ–µ–æ–ø–∞—Ä–¥üêÜ - {leos_count} \n–¢–∏–≥—ÄüêØ - {tigers_count} \n–î—Ä—É–≥–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ - {other_animal_count}üéÅ \n–¢–∞–∫–∂–µ –Ω–∞ —Ñ–æ—Ç–æ –±—ã–ª–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–∏–Ω—Ü–µ—Å—Å–∫–∞ üë∏ üëë."
    else:
        text = f"–ù–∞ —Ñ–æ—Ç–æ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ \n–õ–µ–æ–ø–∞—Ä–¥üêÜ - {leos_count} \n–¢–∏–≥—ÄüêØ - {tigers_count} \n–î—Ä—É–≥–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ - {other_animal_count}üéÅ \n–ü—Ä–∏–Ω—Ü–µ—Å—Å—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ –±—ã–ª–æ..."
        
    bot.send_photo(chat_id=update.message.chat_id, photo=image)
    bot.send_message(chat_id=update.message.chat_id, text=text,
                    reply_to_message_id=update.message.message_id,
                    parse_mode=telegram.ParseMode.HTML)





start_handler = CommandHandler(['start', 'help'], start)
cut_video_handler = CommandHandler(['cut_video'], cut_video)

process_image_handler = MessageHandler(Filters.photo | Filters.document, bot_image_processing)
process_video_handler =  MessageHandler(Filters.video, bot_video_preprocessing)

dispatcher.add_handler(start_handler)
dispatcher.add_handler(cut_video_handler)
dispatcher.add_handler(process_image_handler)
dispatcher.add_handler(process_video_handler)
updater.start_polling()
